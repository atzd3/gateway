$returncode = 0
$noop = $false # Set this to $true or $false depending on your requirement

$PSPolicy = Get-ExecutionPolicy
$MaxMemoryPerShellMB = (Get-Item WSMan:\localhost\Shell\MaxMemoryPerShellMB).Value
$MaxEnvelopeSizeKB = (Get-Item WSMan:\localhost\MaxEnvelopeSizeKB).Value
$psmaximumreceiveddatasizepercommandmb = (Get-PSSessionConfiguration -Name BigData).psmaximumreceiveddatasizepercommandmb
$psmaximumreceivedobjectsizemb = (Get-PSSessionConfiguration -Name BigData).psmaximumreceivedobjectsizemb

if (($PSPolicy.ToString() -eq "RemoteSigned") -and ($MaxMemoryPerShellMB -gt 2147483640) -and ($MaxEnvelopeSizeKB -gt 2045) -and ($psmaximumreceiveddatasizepercommandmb -eq 500) -and ($psmaximumreceivedobjectsizemb -eq 500)) {
    if ($returncode -eq 0) {
        if ($noop) {
            Write-Host "No-op deployment detected."
            exit 0
        } else {
            Write-Host "Normal deployment detected."
            $returncode = 0
        }
    } else {
        $exitflag = $true
    }
    Write-Host "After checking deployment type, returncode=$returncode, exitflag=$exitflag."
} else {
    Write-Host "Failure"
    Write-Host "Policy :$PSPolicy expecting value should be RemoteSigned"
    Write-Host "MaxMemoryPerShellMB:$MaxMemoryPerShellMB expecting value more than 2147483640"
    Write-Host "MaxEnvelopeSizeKB:$MaxEnvelopeSizeKB expecting value more than 2045"
    Write-Host "psmaximumreceiveddatasizepercommandmb:$psmaximumreceiveddatasizepercommandmb expecting value should be 500"
    Write-Host "psmaximumreceivedobjectsizemb:$psmaximumreceivedobjectsizemb expecting value should be 500"
}
